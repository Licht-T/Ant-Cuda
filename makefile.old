
ifeq ($(OS),Windows_NT)
	LBITS = $(shell echo %PROCESSOR_ARCHITECTURE%)
	LBITS64 = $(shell echo %PROCESSOR_ARCHITEW6432%)

	ifeq ($(LBITS),AMD64)
		GLUT_DLL_PATH = ./freeglut/bin/x64
		GLUT_DLL = ${GLUT_DLL_PATH}/freeglut.dll

		INCLUDES = -I. -I./include -I./freeglut/include
		LIBS = -L./lib -lm -L./freeglut/lib/x64 -L${GLUT_DLL_PATH} -lglu32 -lopengl32 -lfreeglut
	else ifeq ($(LBITS64),AMD64)
		GLUT_DLL_PATH = ./freeglut/bin/x64
		GLUT_DLL = ${GLUT_DLL_PATH}/freeglut.dll

		INCLUDES = -I. -I./include -I./freeglut/include
		LIBS = -L./lib -lm -L./freeglut/lib/x64 -L${GLUT_DLL_PATH} -lglu32 -lopengl32 -lfreeglut
	else
		GLUT_DLL_PATH = ./freeglut/bin
		GLUT_DLL = ${GLUT_DLL_PATH}/freeglut.dll

		INCLUDES = -I. -I./include -I./freeglut/include
		LIBS = -L./lib -lm -L./freeglut/lib -L${GLUT_DLL_PATH} -lglu32 -lopengl32 -lfreeglut
	endif
else
	UNAME = ${shell uname}

	ifeq ($(UNAME),Linux)
		INCLUDES = -I. -I./include
		LIBS = -L./lib -lm -lglut -lGLU -lGL
	else ifeq ($(UNAME),Darwin)
		INCLUDES = -I. -I./include -I/System/Library/Frameworks/GLUT.framework/Versions/A/Headers/
		LIBS = -L./lib -lm -framework OpenGL -framework GLUT
	endif
endif

CC = nvcc
CFLAGS = -O0 -arch sm_35 -Xcompiler "-Wall"

CXX = nvcc
CXXFLAGS = -O0 -arch sm_35 -Xcompiler "-Wall"

LD = nvcc
LDFLAGS=  -arch sm_35 -Xcompiler "-Wall"


TARGET = main
CSOURCES = ${TARGET}.cu IO.cu  DataStructures.cu Variables.cu kernel.cu Display.cu
CXXSOURCES =
OBJECTS = ${CSOURCES:.cu=.o} ${CXXSOURCES:.cpp=.o}

.SUFFIXES: .cu .cpp .o

all : ${TARGET}
	-cp ${GLUT_DLL} ./

debug: CFLAGS += -DDEBUG -g -G
debug: CXXFLAGS += -DDEBUG -g -G
debug: LDFLAGS += -DDEBUG -g -G
debug: all

display: CFLAGS += -DDISPLAY
display: CXXFLAGS += -DDISPLAY
display: LDFLAGS += -DDISPLAY
display: all

gpu: CFLAGS += -DGPU
gpu: CXXFLAGS += -DGPU
gpu: LDFLAGS += -DGPU
gpu: all

${TARGET}: ${OBJECTS}
	${LD} ${LDFLAGS} ${OBJECTS} ${LIBS} -o $@

.cu.o :
	${CC} -dc ${CFLAGS} ${INCLUDES} $<

.cpp.o :
	${CXX} -dc ${CXXFLAGS} ${INCLUDES} $<

clean :
	-rm -f ${TARGET}.exe ${OBJECTS} freeglut.dll
